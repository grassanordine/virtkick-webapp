- @header = 'Create a New Machine'
- @icon = 'monitor'

- content_for :scripts do
  = requirejs_include_tag 'pages/machineNew'

#page-new-machine ng-app=1 ng-controller='NewMachineCtrl'
  = form_for @machine, as: :machine, url: machines_path(@machine), method: :post, :html => {:name => "form"}do |f|
    = render partial: '/flash', locals: {section: 'new_machine'}

    div ng-if='data.creatingMachine'
      .form-group.details(ng-class="{ 'has-error' : form['machine[hostname]'].$invalid && !userForm.name.$pristine }")
        input.form-control(name='hostname' ng-model='data.hostname' machine required placeholder="Machine hostname")
        .ng-cloak.help-block
          ng-messages for="form['machine[hostname]'].$error" ng-if="form.$dirty"
            ng-message when="required"
              | This can't be blank.
            ng-message when="already exists"
              | Machine with such hostname already exists.
            ng-message when="has already been taken"
              | Hostname already taken.
            ng-message when="any"
              | Hostname is invalid.
          = errors_for @machine, :hostname

      .form-group
        h2
          i.oi.oi-cart
          | Choose a plan
        .text-center
          .plans.btn-group
            = f.text_field :plan_id, ng_model: 'data.planId', required: true, class: 'hide'
            - for plan in @plans
              - active = @machine.plan == plan ? 'active' : ''
              label class='btn btn-info plan #{active} fixed-width' ng-model='data.planId' btn-radio=plan.id
                span.title
                  = number_to_human_size(plan.memory.gigabytes)
                  |  RAM
                br
                span.val
                  = number_to_human_size(plan.storage)
                  |  SSD
                br
                span.val
                  = plan.cpu
                  |  CPU

      .form-group.image
        h2
          i.oi.oi-aperture
          | Pick an image

        .form-group.text-center
          .image-types.btn-group
            = f.hidden_field :image_type, value: '{{data.imageType}}'
            - for type in [['Mount ISO', 'isos'], ['Appliance', 'appliances'], ['1-Click App', 'apps']]
              - name = type[0]
              - id = type[1]
              - active = @machine.image_type == id ? 'active' : ''
              label class='btn btn-info image-type #{active}' ng-model='data.imageType' btn-radio="'#{id}'"
                span.title = name

          div.ng-cloak
            .image-type-group.appliances.btn-group ng-if='data.imageType == "appliances"'
              p VirtKick will deliver appliances with various Linux distributions. Coming soon!

            - active = @machine.iso_distro ? 'active' : ''
            div.ng-cloak.image-type-group.isos.btn-group class="#{active}" ng-if='data.imageType == "isos"'
              = f.text_field :iso_distro_id, ng_model: 'data.isoId', ng_required: 'true', class: 'hide'
              - for iso in @isos
                - active = @machine.iso_distro == iso ? 'active' : ''
                label class="btn btn-info distro #{active}" ng-model='data.isoId' btn-radio="'#{iso.id}'"
                  .wrap: img src='/assets/distros/#{iso.code}.png'
                  span.name = iso.name

            .image-type-group.apps.btn-group ng-if='data.imageType == "apps"'
              p VirtKick will deliver a 1-click integration with Sandstorm.
              p It allows you to install many webapps with a single click. Coming soon!

          .form-group.text-center
            a.btn.btn-primary.btn-lg.create(ng-disabled='form.$invalid' ng-click='createMachine()') Create a Machine

    div ng-if='!data.creatingMachine'
      #rocket-window
        preloader size=64

