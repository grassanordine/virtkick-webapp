- content_for :scripts do
  = requirejs_include_tag 'setup'

= object_to_json_constant 'allowVpsProvider', Rails.configuration.x.allow_vps_provider
= object_to_json_constant 'allowPrivateCloud', Rails.configuration.x.allow_private_cloud

#page-setup(ng-app=1 ng-controller='SetupCtrl')
  .container-fluid
    .row
      .col-md-offset-1.col-md-11
        .header
           a href="/"
             = image_tag 'logo/logo-regular.png', class: "pix"

  .container
    .row
      .col-lg-12
      .options.col-lg-offset-1.col-lg-5
        h4 Choose installation type:
        div.option
          .button-wrapper
            /= button_to perform_setup_path(:localhost), method: :post, class: 'btn chooser', rel: 'nofollow noindex' do= button_to perform_setup_path(:localhost), method: :post, class: 'btn chooser', rel: 'nofollow noindex' do
            button.btn.chooser(ng-click="setup.mode = 'localhost'" ng-class="{active: setup.mode == 'localhost'}")
              .fa.fa-home
          .text-wrapper
            .title Trusted Network
            .disclaimer.hidden-xs No passwords or anything. Just use.
        div.option(class=("disabled" unless Rails.configuration.x.allow_private_cloud == true))
          .button-wrapper
            button.btn.chooser(ng-click="setup.mode = 'privateCloud'" ng-class="{active: setup.mode == 'privateCloud'}" disabled=("disabled" unless Rails.configuration.x.allow_private_cloud == true))
              .fa.fa-cloud
          .text-wrapper
            .title Private Cloud
            .disclaimer.hidden-xs Protect your machines with credentials.        
            .form-wrapper.ng-cloak.private-cloud-form(ng-show="setup.mode == 'privateCloud'")
              form.private-cloud-only method='post' name='setupForm'
                .form-group show-errors=1
                  label for="extra[email]" E-mail address
                  input.form-control type='email' ng-model='setup.email' name='email' placeholder='E-mail' required=1
                .form-group show-errors=1
                  label for="extra[password]" Password
                  input.form-control type='password' ng-model='setup.password' name='password' placeholder='Password' required=1
                .form-group.no-margin show-errors=1
                  input.form-control type='password' ng-model='setup.passwordConfirm' name='passwordConfirm' match='setupForm.password' placeholder='Confirm Password'
                  .help-block
                    ng-messages for="setupForm.passwordConfirm.$error"
                      ng-message(when='match')
                        | Passwords do not match
        div.option(class=("disabled" unless Rails.configuration.x.allow_vps_provider == true))
          .button-wrapper
            /= button_to perform_setup_path(:vps_provider), method: :post, class: 'btn chooser', rel: 'nofollow noindex', disabled: true do
            /  .fa.fa-sitemap
            button.btn.chooser(ng-click="setup.mode = 'vpsProvider'" ng-class="{active: setup.mode == 'vpsProvider'}" disabled=("disabled" unless Rails.configuration.x.allow_vps_provider == true))
              .fa.fa-sitemap
          .text-wrapper
            .title VPS Provider
            - if Rails.configuration.x.allow_vps_provider == true
              .disclaimer.hidden-xs Let's sell some VPS together!
            - else
              .disclaimer.hidden-xs Not implemented yet. Work in progress!
            .form-wrapper.ng-cloak.private-cloud-form(ng-show="setup.mode == 'vpsProvider'")
              form.private-cloud-only method='post' name='setupForm'
                .form-group show-errors=1
                  label for="extra[email]" E-mail address
                  input.form-control type='email' ng-model='setup.email' name='email' placeholder='E-mail' required=1
                .form-group show-errors=1
                  label for="extra[password]" Password
                  input.form-control type='password' ng-model='setup.password' name='password' placeholder='Password' required=1
                .form-group.no-margin show-errors=1
                  input.form-control type='password' ng-model='setup.passwordConfirm' name='passwordConfirm' match='setupForm.password' placeholder='Confirm Password'
                  .help-block
                    ng-messages for="setupForm.passwordConfirm.$error"
                      ng-message(when='match')
                        | Passwords do not match
        div.option.disabled
          .button-wrapper
            button.btn.chooser(ng-click="setup.mode = 'demo'" ng-class="{active: setup.mode == 'demo'}" disabled)
              .fa.fa-paper-plane
          .text-wrapper
            .title Demo
            .disclaimer.hidden-xs Sessions limited to 30 minutes.
      .launch.col-lg-5
        div.ng-cloak ng-if='setup.error'
          div.alert.alert-danger
            | {{setup.error}}

        long-run-button.btn.btn-lg.btn-primary.ng-cloak(ng-show='setup.mode' run='submit()' on-finish-animation='reload()' ng-disabled="(setup.mode == 'privateCloud' || setup.mode == 'vpsProvider') && setupForm.$invalid")
          | Launch
      .col-lg-1

